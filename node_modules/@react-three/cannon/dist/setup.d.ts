import type { BodyProps, BodyShapeType, CannonWorkerAPI, CollideBeginEvent, CollideEndEvent, CollideEvent, RayhitEvent, Refs, Subscriptions } from '@pmndrs/cannon-worker-api';
import type { MutableRefObject } from 'react';
export type { AtomicName, AtomicProps, BodyProps, BodyPropsArgsRequired, BodyShapeType, BoxProps, Broadphase, Buffers, CannonMessage, CannonMessageBody, CannonMessageMap, CannonMessageProps, CannonWebWorker, CollideBeginEvent, CollideEndEvent, CollideEvent, CompoundBodyProps, ConeTwistConstraintOpts, ConstraintOptns, ConstraintTypes, ConvexPolyhedronArgs, ConvexPolyhedronProps, CylinderArgs, CylinderProps, DistanceConstraintOpts, HeightfieldArgs, HeightfieldProps, HingeConstraintOpts, IncomingWorkerMessage, LockConstraintOpts, Observation, ParticleProps, PlaneProps, PointToPointConstraintOpts, PropValue, Quad, RayhitEvent, RayMode, RayOptions, Refs, SetOpName, ShapeType, Solver, SphereArgs, SphereProps, SpringOptns, StepProps, Subscription, SubscriptionName, Subscriptions, SubscriptionTarget, TrimeshArgs, TrimeshProps, Triplet, VectorName, VectorProps, WheelInfoOptions, WorkerCollideBeginEvent, WorkerCollideEndEvent, WorkerCollideEvent, WorkerEventMessage, WorkerFrameMessage, WorkerRayhitEvent, WorldPropName, WorldProps, } from '@pmndrs/cannon-worker-api';
declare type CannonEvent = CollideBeginEvent | CollideEndEvent | CollideEvent | RayhitEvent;
declare type CallbackByType<T extends {
    type: string;
}> = {
    [K in T['type']]?: T extends {
        type: K;
    } ? (e: T) => void : never;
};
export declare type CannonEvents = {
    [uuid: string]: Partial<CallbackByType<CannonEvent>>;
};
export declare type ProviderContext = {
    bodies: MutableRefObject<{
        [uuid: string]: number;
    }>;
    events: CannonEvents;
    refs: Refs;
    subscriptions: Subscriptions;
    worker: CannonWorkerAPI;
};
export declare type DebugApi = {
    add(id: string, props: BodyProps, type: BodyShapeType): void;
    remove(id: string): void;
};
export declare const context: import("react").Context<ProviderContext>;
export declare const debugContext: import("react").Context<DebugApi>;
