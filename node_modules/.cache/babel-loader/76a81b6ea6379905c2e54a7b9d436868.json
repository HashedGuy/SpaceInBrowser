{"ast":null,"code":"import _slicedToArray from\"/Users/arbus/Documents/SpaceInBrowser/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useFrame,useLoader}from'@react-three/fiber';import React,{useRef}from'react';import*as THREE from'three';import{TextureLoader}from'three';import MarsMap from\"../assets/compressed/2k_mars(1).jpg\";import{useRecoilState}from'recoil';import{clickedCBState}from'./globalState';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Ecliptic(_ref){var _ref$xRadius=_ref.xRadius,xRadius=_ref$xRadius===void 0?1:_ref$xRadius,_ref$zRadius=_ref.zRadius,zRadius=_ref$zRadius===void 0?1:_ref$zRadius;var points=[];for(var index=0;index<64;index++){var angle=index/64*2*Math.PI;var x=xRadius*Math.cos(angle);var z=zRadius*Math.sin(angle);points.push(new THREE.Vector3(x,0,z));}points.push(points[0]);var lineGeometry=new THREE.BufferGeometry().setFromPoints(points);return/*#__PURE__*/_jsx(\"line\",{geometry:lineGeometry,children:/*#__PURE__*/_jsx(\"lineBasicMaterial\",{attach:\"material\",color:\"red\",linewidth:.1})});}export function Mars(props){var _useLoader=useLoader(TextureLoader,[MarsMap]),_useLoader2=_slicedToArray(_useLoader,1),marsMap=_useLoader2[0];var _useRecoilState=useRecoilState(clickedCBState),_useRecoilState2=_slicedToArray(_useRecoilState,2),activeObject=_useRecoilState2[0],setObject=_useRecoilState2[1];var marsRef=useRef();var xRadius;var zRadius;activeObject==='mars'?xRadius=0:activeObject==='moon'?xRadius=-22:activeObject==='LEO'?xRadius=-28:xRadius=18;activeObject==='mars'?zRadius=0:activeObject==='earth'?zRadius=14:activeObject===''?zRadius=12:zRadius=15;useFrame(function(_ref2){var clock=_ref2.clock;var elapsedTime=clock.getElapsedTime()*.004;var x=xRadius*Math.sin(elapsedTime);var z=zRadius*Math.cos(elapsedTime);marsRef.current.position.x=x;marsRef.current.position.z=z;// activeObject === 'mars' ? (marsRef.current.rotation.y += .005) : (marsRef.current.rotation.y += 0)\n});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"mesh\",{ref:marsRef,scale:activeObject==='earth'||activeObject==='moon'?.1:activeObject==='LEO'?.05:activeObject==='mars'?4:1,onDoubleClick:function onDoubleClick(){return setObject('mars');},children:[/*#__PURE__*/_jsx(\"sphereBufferGeometry\",{args:[0.50,32,32]}),/*#__PURE__*/_jsx(\"meshStandardMaterial\",{map:marsMap,metalness:0.4,roughness:0.7})]}),activeObject===''?/*#__PURE__*/_jsx(Ecliptic,{xRadius:xRadius,zRadius:zRadius}):'']});}export default Mars;","map":{"version":3,"sources":["/Users/arbus/Documents/SpaceInBrowser/src/components/Mars.js"],"names":["useFrame","useLoader","React","useRef","THREE","TextureLoader","MarsMap","useRecoilState","clickedCBState","Ecliptic","xRadius","zRadius","points","index","angle","Math","PI","x","cos","z","sin","push","Vector3","lineGeometry","BufferGeometry","setFromPoints","Mars","props","marsMap","activeObject","setObject","marsRef","clock","elapsedTime","getElapsedTime","current","position"],"mappings":"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","sourcesContent":["import { useFrame, useLoader } from '@react-three/fiber';\nimport React, {useRef} from 'react';\nimport * as THREE from 'three'\n\nimport { TextureLoader } from 'three';\nimport MarsMap from \"../assets/compressed/2k_mars(1).jpg\"\nimport { useRecoilState } from 'recoil';\nimport { clickedCBState } from './globalState';\n\nfunction Ecliptic({ xRadius = 1, zRadius = 1 }) {\n  const points = [];\n  for (let index = 0; index < 64; index++) {\n    const angle = (index / 64) * 2 * Math.PI;\n    const x = xRadius * Math.cos(angle);\n    const z = zRadius * Math.sin(angle);\n    points.push(new THREE.Vector3(x, 0, z));\n  }points.push(points[0]);const lineGeometry = new THREE.BufferGeometry().setFromPoints(points);\n  return (\n    <line geometry={lineGeometry}>\n      <lineBasicMaterial attach=\"material\" color=\"red\" linewidth={.1} />\n    </line>\n  );\n}\n\nexport function Mars(props) {\n  const [marsMap] = useLoader(\n    TextureLoader,\n    [MarsMap]\n  );\n\n  const [activeObject, setObject] = useRecoilState(clickedCBState)\n\n \n  const marsRef = useRef()\n  let xRadius\n  let zRadius\n\n  activeObject === 'mars' ? xRadius=0\n  : activeObject === 'moon' ? xRadius=-22\n  : activeObject === 'LEO' ? xRadius=-28 \n    : xRadius=18\n  \n  activeObject === 'mars' ? zRadius=0\n  : activeObject === 'earth' ? zRadius= 14 \n    : activeObject === '' ? zRadius=12 \n    :zRadius=15\n\n  useFrame(({ clock }) => {\n    const elapsedTime = clock.getElapsedTime() * .004;\n    \n    const x = xRadius* Math.sin(elapsedTime)\n    const z = zRadius* Math.cos(elapsedTime)\n    marsRef.current.position.x = x;\n    marsRef.current.position.z = z;\n    // activeObject === 'mars' ? (marsRef.current.rotation.y += .005) : (marsRef.current.rotation.y += 0)\n\n  });\n\n  return (\n    <>\n      <mesh \n        ref={marsRef} \n        scale={\n          (activeObject === 'earth') || (activeObject === 'moon') ? .1 \n          :\n          activeObject === 'LEO' ? .05\n          :\n          activeObject === 'mars' ? 4\n          : 1}\n          onDoubleClick={()=>setObject('mars')}\n      >\n        <sphereBufferGeometry args={[0.50, 32, 32]} />\n        <meshStandardMaterial\n          map={marsMap}\n          metalness={0.4}\n          roughness={0.7}\n        />\n        \n      </mesh>\n      {activeObject === '' ? <Ecliptic xRadius={xRadius} zRadius={zRadius}/> : ''}\n    \n    </>\n  );\n}\nexport default Mars;\n"]},"metadata":{},"sourceType":"module"}